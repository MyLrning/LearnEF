// <auto-generated />
using System;
using LearningEF.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearningEF.Migrations
{
    [DbContext(typeof(TasksContext))]
    partial class TasksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LearningEF.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Work related tasks",
                            Name = "Work",
                            Weight = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Home related tasks",
                            Name = "Home",
                            Weight = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Hobby related tasks",
                            Name = "Hobby",
                            Weight = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Other tasks",
                            Name = "Other",
                            Weight = 4
                        });
                });

            modelBuilder.Entity("LearningEF.Models.Duty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Duty", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDate = new DateTime(2022, 10, 15, 15, 6, 37, 465, DateTimeKind.Local).AddTicks(5958),
                            Deadline = new DateTime(2022, 10, 22, 15, 6, 37, 465, DateTimeKind.Local).AddTicks(5966),
                            Priority = 0,
                            Title = "Learn EF Core"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateDate = new DateTime(2022, 10, 15, 15, 6, 37, 465, DateTimeKind.Local).AddTicks(5974),
                            Deadline = new DateTime(2022, 10, 22, 15, 6, 37, 465, DateTimeKind.Local).AddTicks(5974),
                            Description = "Clean the house",
                            Priority = 0,
                            Title = "Clean the house"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreateDate = new DateTime(2022, 10, 15, 15, 6, 37, 465, DateTimeKind.Local).AddTicks(5975),
                            Deadline = new DateTime(2022, 10, 22, 15, 6, 37, 465, DateTimeKind.Local).AddTicks(5976),
                            Description = "Learn ASP.NET Core",
                            Priority = 0,
                            Title = "Learn ASP.NET Core"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreateDate = new DateTime(2022, 10, 15, 15, 6, 37, 465, DateTimeKind.Local).AddTicks(5977),
                            Deadline = new DateTime(2022, 10, 22, 15, 6, 37, 465, DateTimeKind.Local).AddTicks(5977),
                            Description = "Learn Blazor",
                            Priority = 0,
                            Title = "Learn Blazor"
                        });
                });

            modelBuilder.Entity("LearningEF.Models.Duty", b =>
                {
                    b.HasOne("LearningEF.Models.Category", "Category")
                        .WithMany("Duties")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LearningEF.Models.Category", b =>
                {
                    b.Navigation("Duties");
                });
#pragma warning restore 612, 618
        }
    }
}
